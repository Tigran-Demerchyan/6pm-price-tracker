import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import { fetchProductHistoryById } from './productHistoryAPI';

const initialState = {
  history: [],

};


export const fetchProductHistoryByIdAsync = createAsyncThunk(
  'history/fetchProductHistoryById',
  async (id) => {
    const response = await fetchProductHistoryById(id);

    return response;
  }
);




export const productHistorySlice = createSlice({
  name: 'history',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {

  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(fetchProductHistoryByIdAsync.pending, (state) => {
        // state.status = 'loading';
      })
      .addCase(fetchProductHistoryByIdAsync.fulfilled, (state, action) => {


        state.history = action.payload;
      });
  },
});



export const selectHistory = (state) => state.history.history;


export default productHistorySlice.reducer;
